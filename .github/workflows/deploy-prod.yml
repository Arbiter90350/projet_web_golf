name: deploy-prod

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'docker-compose.yml'
      - 'docker-compose.prod.yml'
      - 'caddy/**'
      - '.github/workflows/deploy-prod.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Optional: build check to fail fast if frontend fails to build with /api
      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Frontend build sanity check
        env:
          VITE_API_URL: /api
        run: |
          cd frontend
          rm -rf node_modules package-lock.json ~/.npm/_cacache || true
          npm install
          npm run build

      - name: Validate required deployment secrets
        shell: bash
        run: |
          set -euo pipefail
          missing=()
          [[ -z "${{ secrets.VPS_HOST }}" ]] && missing+=(VPS_HOST)
          [[ -z "${{ secrets.VPS_USER }}" ]] && missing+=(VPS_USER)
          [[ -z "${{ secrets.VPS_SSH_KEY }}" ]] && missing+=(VPS_SSH_KEY)
          [[ -z "${{ secrets.VPS_APP_DIR }}" ]] && missing+=(VPS_APP_DIR)
          if (( ${#missing[@]} > 0 )); then
            echo "Missing required secrets: ${missing[*]}" >&2
            exit 1
          fi

      - name: Upload repository to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT || '22' }}
          source: .
          target: ${{ secrets.VPS_APP_DIR }}
          overwrite: true
          strip_components: 0
          rm: false

      - name: Deploy on VPS with Docker Compose (prod)
        uses: appleboy/ssh-action@v1.2.0
        env:
          VPS_APP_DIR: ${{ secrets.VPS_APP_DIR }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_SSH_PORT || '22' }}
          script: |
            set -euo pipefail
            cd "$VPS_APP_DIR"
            # Ensure .env file exists (managed on VPS, not in repo)
            if [ ! -f .env ]; then
              echo "Missing .env on server. Aborting." >&2
              exit 1
            fi
            docker compose -f docker-compose.yml -f docker-compose.prod.yml pull || true
            docker compose -f docker-compose.yml -f docker-compose.prod.yml build --pull
            docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d --remove-orphans
            docker system prune -f || true
