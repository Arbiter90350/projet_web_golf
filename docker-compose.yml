services:
  # Base de données MongoDB
  database:
    image: mongo:latest
    container_name: fairway-db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-fairway}
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --eval \"db.adminCommand({ ping: 1 }).ok\" -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin | grep 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - fairway-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fairway-backend
    restart: always
    env_file:
      - .env
    ports:
      - "5001:5000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      MONGO_URI: ${MONGO_URI}
      JWT_SECRET: ${JWT_SECRET}
      PORT: 5000
      FRONTEND_URL: ${FRONTEND_URL}
      # Disable AWS SDK request checksums to avoid x-amz-sdk-checksum-* on presigned PUT (OVH incompatibility)
      AWS_SDK_REQUEST_CHECKSUM_CALCULATION: ${AWS_SDK_REQUEST_CHECKSUM_CALCULATION:-never}
      # OVH Object Storage (S3-compatible)
      # These must be provided via the root .env file
      OVH_ENDPOINT: ${OVH_ENDPOINT}
      OVH_REGION: ${OVH_REGION}
      OVH_ACCESS_KEY: ${OVH_ACCESS_KEY}
      OVH_SECRET_KEY: ${OVH_SECRET_KEY}
      OVH_CONTAINER: ${OVH_CONTAINER}
      OVH_BASE_URL: ${OVH_BASE_URL}
      # Autorise les origines CORS en développement (Vite 5173) et localhost (port 80)
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:5173,http://127.0.0.1:5173,http://localhost}
      # Limites d'upload (Doivent rester cohérentes avec Nginx et le frontend)
      # 500 Mo par défaut si non fourni via .env
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-524288000}
      # Types MIME autorisés pour l'upload (séparés par des virgules)
      ALLOWED_FILE_TYPES: ${ALLOWED_FILE_TYPES:-video/mp4,application/pdf,image/png,image/jpeg}
      # Configuration Email
      EMAIL_PROVIDER: ${EMAIL_PROVIDER:-smtp}
      EMAIL_FROM: ${EMAIL_FROM}
      # SMTP OVH Exchange
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      # Seed (optionnel)
      SEED_ON_START: ${SEED_ON_START:-0}
      SEED_ADMIN_EMAIL: ${SEED_ADMIN_EMAIL}
      SEED_ADMIN_PASSWORD: ${SEED_ADMIN_PASSWORD}
      SEED_INSTRUCTOR_EMAIL: ${SEED_INSTRUCTOR_EMAIL}
      SEED_INSTRUCTOR_PASSWORD: ${SEED_INSTRUCTOR_PASSWORD}
      SEED_PLAYER_EMAIL: ${SEED_PLAYER_EMAIL}
      SEED_PLAYER_PASSWORD: ${SEED_PLAYER_PASSWORD}
      SEED_PLAYER2_EMAIL: ${SEED_PLAYER2_EMAIL:-}
      SEED_PLAYER2_PASSWORD: ${SEED_PLAYER2_PASSWORD:-}
    healthcheck:
      test: ["CMD", "curl", "-fSs", "http://localhost:5000/health"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    depends_on:
      database:
        condition: service_healthy
    networks:
      - fairway-network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        # Passe la variable au build Vite pour être injectée dans le bundle
        # L'URL de l'API est maintenant gérée par le reverse proxy Nginx.
        # On passe une URL relative pour que les appels se fassent sur le même domaine.
        VITE_API_URL: /api
    container_name: fairway-frontend
    restart: always
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - fairway-network

  # Service de seed (one-shot)
  seed:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fairway-seed
    restart: "no"
    # Make seeding opt-in (won't run on normal 'up' unless profile is enabled)
    profiles:
      - seed
    entrypoint: ["npm", "run", "seed"]
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - MONGO_URI=${MONGO_URI}
      - SEED_ADMIN_EMAIL=${SEED_ADMIN_EMAIL}
      - SEED_ADMIN_PASSWORD=${SEED_ADMIN_PASSWORD}
      - SEED_INSTRUCTOR_EMAIL=${SEED_INSTRUCTOR_EMAIL}
      - SEED_INSTRUCTOR_PASSWORD=${SEED_INSTRUCTOR_PASSWORD}
      - SEED_PLAYER_EMAIL=${SEED_PLAYER_EMAIL}
      - SEED_PLAYER_PASSWORD=${SEED_PLAYER_PASSWORD}
      - SEED_PLAYER2_EMAIL=${SEED_PLAYER2_EMAIL:-}
      - SEED_PLAYER2_PASSWORD=${SEED_PLAYER2_PASSWORD:-}
    depends_on:
      database:
        condition: service_healthy
    networks:
      - fairway-network

# Configuration des volumes et réseaux
volumes:
  mongodb_data:
    external: true
    name: projet_web_golf_mongodb_data

networks:
  fairway-network:
    driver: bridge
