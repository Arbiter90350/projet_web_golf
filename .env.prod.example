# Exemple de configuration PROD (VPS Docker)
# IMPORTANT: ne JAMAIS committer de secrets réels.
# Domaine ciblé: app.golf-rougemont.com
# Placeholders: NEW_IP à remplacer par l'IP publique lors de l'exécution des commandes.

# --- TLS (terminaison dans Nginx frontend) ---
# Répertoire des certificats monté dans le conteneur frontend à /etc/nginx/certs
# Par défaut, on utilise le dossier local ./secrets/tls (les fichiers .pem ne doivent pas être committés)
TLS_CERTS_DIR=./secrets/tls
# En PROD sur le VPS, il est recommandé de pointer directement vers les certificats Let’s Encrypt
# pour éviter toute copie manuelle et bénéficier des renouvellements automatiques:
# TLS_CERTS_DIR=/etc/letsencrypt/live/app.golf-rougemont.com

# --- Base de données MongoDB (Docker, réseau interne) ---
# Ces variables sont utilisées par le conteneur Mongo (service: database)
MONGO_INITDB_ROOT_USERNAME=change_me_admin
MONGO_INITDB_ROOT_PASSWORD=change_me_strong_password
MONGO_INITDB_DATABASE=fairway

# URI utilisée par le backend pour se connecter à Mongo (réseau Docker interne)
# Note: host = service Docker "database" (pas d'exposition publique en prod)
MONGO_URI=mongodb://change_me_admin:change_me_strong_password@database:27017/fairway?authSource=admin

# --- Backend ---
NODE_ENV=production
PORT=5000
JWT_SECRET=change_me_ultra_secret
# Domaine du frontend (même origine)
FRONTEND_URL=https://app.golf-rougemont.com
# Origine publique absolue (utilisée pour icône/clic des notifications push)
PUBLIC_ORIGIN=https://app.golf-rougemont.com
# Origines CORS autorisées (garder strict en prod)
CORS_ORIGINS=https://app.golf-rougemont.com
# Derrière Nginx proxy
TRUST_PROXY=1
# Niveau de log
LOG_LEVEL=info

# Web Push VAPID (renseigner sur le VPS; NE PAS COMMITTER DE SECRETS)
WEB_PUSH_VAPID_PUBLIC_KEY=
WEB_PUSH_VAPID_PRIVATE_KEY=
WEB_PUSH_SUBJECT=mailto:contact@golf-rougemont.com

# --- OVH Object Storage (S3-compatible) ---
# Remplir ces valeurs sur le VPS via .env (NE PAS COMMITTER DE SECRETS)
OVH_ENDPOINT=s3.REGION.io.cloud.ovh.net
OVH_REGION=sbg
OVH_ACCESS_KEY=
OVH_SECRET_KEY=
OVH_CONTAINER=osa
# URL publique de base (sans slash final) où sont servis les fichiers
OVH_BASE_URL=https://osa.s3.sbg.io.cloud.ovh.net
# Limites d'upload (doivent rester cohérentes avec Nginx et le frontend)
MAX_FILE_SIZE=524288000
ALLOWED_FILE_TYPES=image/jpeg,image/png,application/pdf,video/mp4

# Désactiver les checksums AWS SDK pour la compatibilité OVH sur les PUT pré-signés
# (peut aussi être défini via docker-compose.yml)
AWS_SDK_REQUEST_CHECKSUM_CALCULATION=never

# --- Serveur HTTP (timeouts) ---
# Temps maximum pour traiter une requête HTTP (Node server.requestTimeout)
SERVER_REQUEST_TIMEOUT_MS=60000
# Temps maximum pour recevoir les en-têtes (Node server.headersTimeout)
SERVER_HEADERS_TIMEOUT_MS=65000
# Timeout keep-alive (Node server.keepAliveTimeout)
SERVER_KEEPALIVE_TIMEOUT_MS=60000
# Timeout socket bas-niveau (0 = désactivé)
SERVER_SOCKET_TIMEOUT_MS=0

# --- VPS & CI/CD (placeholders pour la documentation/automatisation) ---
# Ces variables NE SONT PAS lues par l'application, mais servent de trame pour configurer
# les secrets GitHub Actions et la structure distante.
# Elles doivent être définies dans GitHub Secrets et/ou dans la doc d'exploitation.
# Voir .github/workflows/deploy-prod.yml

# Hôte du VPS (DNS ou IP) — utiliser NEW_IP dans les runbooks
VPS_HOST=NEW_IP
# Utilisateur SSH (par défaut 'ubuntu' sur Ubuntu cloud)
VPS_USER=ubuntu
# Port SSH
VPS_SSH_PORT=22
# Répertoire d'application sur le VPS (réception du dépôt)
VPS_APP_DIR=/opt/fph/app

# --- Rate Limiting (peut être ajusté) ---
RL_GLOBAL_MAX=300
RL_GLOBAL_WINDOW_MIN=1
RL_AUTH_MAX=10
RL_AUTH_WINDOW_MIN=15
RL_FORGOT_MAX=5
RL_FORGOT_WINDOW_MIN=15
RL_REGISTER_MAX=5
RL_REGISTER_WINDOW_MIN=60
RL_VERIFY_MAX=5
RL_VERIFY_WINDOW_MIN=30

# --- Frontend (build Vite) ---
# En prod Docker, VITE_API_URL est passé comme build arg par docker-compose.prod.yml
# et vaut /api pour même-origine (ne pas définir ici).
# VITE_API_URL=/api
# Timeout global Axios (ms) — optionnel, par défaut 20000ms dans le code
# VITE_API_TIMEOUT_MS=20000


EMAIL_FROM="Golf Rougemont <noreply@golf-rougemont.com>"

# --- Email SMTP (OVH Exchange recommandé) ---
EMAIL_PROVIDER=smtp
SMTP_HOST=ex5.mail.ovh.net
SMTP_PORT=587
SMTP_USER=info@golf-rougemont.com
SMTP_PASSWORD=

# --- Seed (optionnel en prod; recommandé: one-shot via `docker compose run seed`) ---
# Ne pas activer automatiquement en prod sauf besoin ponctuel
SEED_ON_START=0
# Comptes créés par le script de seed (laisser vides pour éviter d'injecter des secrets en clair)
SEED_ADMIN_EMAIL=
SEED_ADMIN_PASSWORD=
SEED_INSTRUCTOR_EMAIL=
SEED_INSTRUCTOR_PASSWORD=
SEED_PLAYER_EMAIL=
SEED_PLAYER_PASSWORD=
